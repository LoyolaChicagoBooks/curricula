name: "Online/Print Book"

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

env:
  PDF_FILE_NAME: build/latex/CS-Curricula.pdf
  FIGSHARE_ARTICLE_ID: 22806431

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Upgrade pip
        run: |
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

      - name: Generate HTML using Sphinx
        run: |
          make html
          echo curricula.cs.luc.edu > build/html/CNAME

      - name: Generate LaTeX using Sphinx
        run: |
          make latex

      - name: make latexpdf via TeXLive
        uses: xu-cheng/texlive-action/full@v1
        with:
          run: |
            apk add make
            make -C build/latex

      - name: Publish HTML to GitHub Pages 
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/html

      - name: Publish PDF to GitHub Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/latex/CS-Curricula.pdf

      - name: Prepare PDF for upload to Figshare
        run: |
          mkdir upload
          cp $PDF_FILE_NAME upload

      - name: Upload PDF to Figshare
        uses: figshare/github-upload-action@v1.1
        with:
          FIGSHARE_TOKEN: ${{ secrets.FIGSHARE_TOKEN }}
          FIGSHARE_ENDPOINT: 'https://api.figshare.com/v2'
          FIGSHARE_ARTICLE_ID: ${{ env.FIGSHARE_ARTICLE_ID }}
          DATA_DIR: 'upload'
